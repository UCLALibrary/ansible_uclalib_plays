---

- hosts: "californica{{ server_environ }}web"
  become: yes
  become_method: sudo
  user: ansible

  tasks:
    - name: Ensure capistrano user is defined
      set_fact:
        cap_user: "{{ capistrano_user | default('deploy') }}"

    - name: Set environment and date_time variable
      set_fact:
        env_date_time: "{{ server_environ }}_{{ansible_date_time.date}}"

    - name: Ensure backup mount point exists
      file:
        path: "/mnt/samvera_backup"
        owner: "root"
        group: "root"
        mode: "0750"
        state: "directory"

    - name: Mount storage area for backups
      mount:
        path: "/mnt/samvera_backup"
        src: "samvera.in.library.ucla.edu:/Samvera_Recovery"
        fstype: "nfs"
        state: "mounted"

    - name: Create directory to store backups on the mount point
      file:
        path: "/mnt/samvera_backup/californica_{{ env_date_time }}"
        owner: "root"
        group: "root"
        mode: "0750"
        state: "directory"

    - name: Enable Californica read-only mode
      become_user: "{{ cap_user }}"
      shell: >
        RAILS_ENV=production bundle exec rake californica:read_only:on
      args:
        chdir: "/opt/californica/current"

    - name: Dump Californica Rails App database
      shell: >
        mysqldump --no-tablespaces californicadb{{ server_environ }} >
        /mnt/samvera_backup/californica_{{ env_date_time }}/californicadb{{ server_environ }}_{{ansible_date_time.date}}.sql

    - name: Copy Redis database
      copy:
        remote_src: "yes"
        src: "/var/lib/redis/dump.rdb"
        dest: "/mnt/samvera_backup/californica_{{ env_date_time }}/redis_db_{{ansible_date_time.date}}"
        owner: "root"
        group: "root"
        mode: "0640"

    - name: Create archive of Californica derivatives
      command: >
        tar --exclude='.snapshot' -czf
        /mnt/samvera_backup/californica_{{ env_date_time }}/derivatives_{{ansible_date_time.date}}.tar.gz
        /opt/derivatives
      args:
        creates: "/mnt/samvera_backup/californica_{{ env_date_time }}/derivatives_{{ansible_date_time.date}}.tar.gz"

##############################################################################

- hosts: "californica{{ server_environ }}fedora"
  become: yes
  become_method: sudo
  user: ansible

  tasks:
    - name: Set environment and date_time variable
      set_fact:
        env_date_time: "{{ server_environ }}_{{ansible_date_time.date}}"

    - name: Ensure backup mount point exists
      file:
        path: "/mnt/samvera_backup"
        owner: "root"
        group: "root"
        mode: "0750"
        state: "directory"

    - name: Mount storage area for backups
      mount:
        path: "/mnt/samvera_backup"
        src: "samvera.in.library.ucla.edu:/Samvera_Recovery"
        fstype: "nfs"
        state: "mounted"

    - name: Dump fedora database
      shell: >
        mysqldump --no-tablespaces fedora_californica_{{ server_environ }} >
        /mnt/samvera_backup/californica_{{ env_date_time }}/fedora_californica_{{ server_environ }}_{{ansible_date_time.date}}.sql

    - name: Create fedora data store backup directory in backup mount
      file:
        path: "/mnt/samvera_backup/californica_{{ env_date_time }}/fedora_datastore_{{ansible_date_time.date}}"
        owner: "root"
        group: "root"
        mode: "0750"
        state: "directory"

    - name: Copy contents of fedora datastore
      command: >
        rsync --exclude=.snapshot --archive
        /opt/fedora-data/
        /mnt/samvera_backup/californica_{{ env_date_time }}/fedora_datastore_{{ansible_date_time.date}}

    - name: Unmount storage area for backups
      mount:
        path: "/mnt/samvera_backup"
        src: "samvera.in.library.ucla.edu:/Samvera_Recovery"
        fstype: nfs
        state: "absent"

##############################################################################

- hosts: "californica{{ server_environ }}solr"
  become: yes
  become_method: sudo
  user: ansible

  tasks:
    - name: Set environment and date_time variable
      set_fact:
        env_date_time: "{{ server_environ }}_{{ansible_date_time.date}}"

    - name: Ensure backup mount point exists
      file:
        path: "/mnt/samvera_backup"
        owner: "root"
        group: "root"
        mode: "0750"
        state: "directory"

    - name: Mount storage area for backups
      mount:
        path: "/mnt/samvera_backup"
        src: "samvera.in.library.ucla.edu:/Samvera_Recovery"
        fstype: "nfs"
        state: "mounted"

    - name: Stop Solr Process
      service:
        name: solr
        state: stopped

    - name: Create archive of solr core
      archive:
        path: "/var/solr/data"
        dest: "/mnt/samvera_backup/californica_{{ env_date_time }}/calursus_{{ansible_date_time.date}}.tar.gz"
        format: gz

    - name: Start Solr Process
      service:
        name: solr
        state: started

    - name: Unmount storage area for backups
      mount:
        path: "/mnt/samvera_backup"
        src: "samvera.in.library.ucla.edu:/Samvera_Recovery"
        fstype: nfs
        state: "absent"

##############################################################################

- hosts: "californica{{ server_environ }}web"
  become: yes
  become_method: sudo
  user: ansible

  tasks:
    - name: Ensure capistrano user is defined
      set_fact:
        cap_user: "{{ capistrano_user | default('deploy') }}"

    - name: Set environment and date_time variable
      set_fact:
        env_date_time: "{{ server_environ }}_{{ansible_date_time.date}}"

    - name: Ensure backup mount point exists
      file:
        path: "/mnt/samvera_backup"
        owner: "root"
        group: "root"
        mode: "0750"
        state: "directory"

    - name: Mount storage area for backups
      mount:
        path: "/mnt/samvera_backup"
        src: "samvera.in.library.ucla.edu:/Samvera_Recovery"
        fstype: "nfs"
        state: "mounted"

    - name: Disable Californica read-only mode
      become_user: "{{ cap_user }}"
      shell: >
        RAILS_ENV=production bundle exec rake californica:read_only:off
      args:
        chdir: "/opt/californica/current"

    - name: Find Californica back-up directories older than 3 weeks
      find:
        paths: "/mnt/samvera_backup"
        patterns: "californica_*_*"
        file_type: "directory"
        age: "504h"
        recurse: "no"
      register: californica_remove_dirs

    - name: Remove Californica back-up directories older than 3 weeks
      file:
        path: "{{ item.path }}"
        state: "absent"
      loop: "{{ californica_remove_dirs.files }}"

    - name: Unmount storage area for backups
      mount:
        path: "/mnt/samvera_backup"
        src: "samvera.in.library.ucla.edu:/Samvera_Recovery"
        fstype: nfs
        state: "absent"
